# .github/workflows/ci-main.yml
name: CI Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5433:5432]
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: db_test
        options: >-
          --health-cmd="pg_isready -U testuser -d db_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://testuser:testpass@localhost:5433/db_test
      NODE_ENV: test
      TEST_SUITE: authFlow
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: server

      - name: Run ESLint
        run: npm run lint
        working-directory: server

      - name: Prettier
        run: npm run format
        working-directory: server

      - name: Run tests
        run: npm run test:ci
        working-directory: server
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5433/db_test
          TEST_SUITE: authFlow

      - name: Upload coverage
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: server/coverage/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@13a24e453e2e6262f3bb0c5fa8241031e637a028
        with:
          projectBaseDir: .
          args: >
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}

     
